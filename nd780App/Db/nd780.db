##########################--Keyboard--###############################

record(bo, "$(P)$(R)$(P)$(R)Key0") {
    field(DESC, "toggle key 0")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_zero nd780")
}
record(bo, "$(P)$(R)Key1") {
    field(DESC, "toggle key 1")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_one nd780")
}
record(bo, "$(P)$(R)Key2") {
    field(DESC, "toggle key 2")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_axisX nd780")
}
record(bo, "$(P)$(R)Key3") {
    field(DESC, "toggle key 3")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_three nd780")
}
record(bo, "$(P)$(R)Key4") {
    field(DESC, "toggle key 4")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_four nd780")
}
record(bo, "$(P)$(R)Key5") {
    field(DESC, "toggle key 5")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_five nd780")
}
record(bo, "$(P)$(R)Key6") {
    field(DESC, "toggle key 6")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_six nd780")
}
record(bo, "$(P)$(R)Key7") {
    field(DESC, "toggle key 7")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_seven nd780")
}
record(bo, "$(P)$(R)Key8") {
    field(DESC, "toggle key 8")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_eight nd780")
}
record(bo, "$(P)$(R)Key9") {
    field(DESC, "toggle key 9")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_nine nd780")
}
record(bo, "$(P)$(R)KeyC") {
    field(DESC, "toggle key C")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_clear nd780")
}
record(bo, "$(P)$(R)KeyMinus") {
    field(DESC, "toggle key minus")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_minus nd780")
}
record(bo, "$(P)$(R)KeyPoint") {
    field(DESC, "toggle key point")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_point nd780")
}
record(bo, "$(P)$(R)KeyEnt") {
    field(DESC, "toggle key enter")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_ent nd780")
}
record(bo, "$(P)$(R)KeyX") {
    field(DESC, "toggle key X")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_axisX nd780")
}
record(bo, "$(P)$(R)KeyY") {
    field(DESC, "toggle key Y")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_axisY nd780")
}
record(bo, "$(P)$(R)KeyZ") {
    field(DESC, "toggle key Z")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_axisZ nd780")
}
record(bo, "$(P)$(R)KeyFN1") {
    field(DESC, "toggle key Function 1")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_fn1 nd780")
}
record(bo, "$(P)$(R)KeyFN2") {
    field(DESC, "toggle key Function 1")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_fn2 nd780")
}
record(bo, "$(P)$(R)KeyFN3") {
    field(DESC, "toggle key Function 1")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_fn3 nd780")
}
record(bo, "$(P)$(R)KeyFN4") {
    field(DESC, "toggle key Function 4")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_fn4 nd780")
}
record(bo, "$(P)$(R)KeyRight") {
    field(DESC, "toggle key right arrow")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_right nd780")
}
record(bo, "$(P)$(R)KeyLeft") {
    field(DESC, "toggle key left arrow")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_left nd780")
}
record(bo, "$(P)$(R)KeyUp") {
    field(DESC, "toggle key up arrow")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_up nd780")
}
record(bo, "$(P)$(R)KeyDown") {
    field(DESC, "toggle key down arrow")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto write_down nd780")
}

##########################--Auxiliary Records--###############################

record(ai, "$(P)$(R)IntrAux") {
    field(DESC, "Triggers I/O Interruption")
    field(DTYP, "stream")
    field(SCAN, ".1 second")
    field(INP,  "@nd780.proto get_positions nd780")
}
record(stringin, "$(P)$(R)ModeXAux") {
    field(DESC, "Gets X current mode")
    field(DTYP, "stream")
    field(SCAN, "I/O Intr")
    field(INP,  "@nd780.proto get_modeX nd780")
}
record(stringin, "$(P)$(R)ModeYAux") {
    field(DESC, "Gets Y current mode")
    field(DTYP, "stream")
    field(SCAN, "I/O Intr")
    field(INP,  "@nd780.proto get_modeY nd780")
}
record(stringin, "$(P)$(R)ModeZAux") {
    field(DESC, "Gets Z current mode")
    field(DTYP, "stream")
    field(SCAN, "I/O Intr")
    field(INP,  "@nd780.proto get_modeZ nd780")
}
record(stringin, "$(P)$(R)EGUAux") {
    field(DESC, "Gets current Engineering Unit")
    field(DTYP, "stream")
    field(SCAN, "I/O Intr")
    field(INP,  "@nd780.proto get_unit nd780")
}
##########################--Monitoring--###############################

record(ai, "$(P)$(R)PosX-Mon") {
    field(DESC, "Get X axis position")
    field(DTYP, "stream")
    field(SCAN, "I/O Intr")
    field(INP,  "@nd780.proto get_positionX nd780")
}

record(scalcout, "$(P)$(R)ModeX-Mon") {
    field(DESC, "Get current X measure mode")
    field(INAA, "ModeXAux CPP")
    field(BB, "Radius")
    field(CC, "Delta Radius")
    field(DD, "Diameter")
    field(EE, "Delta Diameter")
    field(CALC, "AA='R'?BB:(AA='r'?CC:(AA='D'?DD:(AA=d?EE:'Not found')))")
}

record(ai, "$(P)$(R)PosY-Mon") {
    field(DESC, "Get Y axis position")
    field(DTYP, "stream")
    field(SCAN, "I/O Intr")
    field(INP,  "@nd780.proto get_positionY nd780")
}

record(scalcout, "$(P)$(R)ModeY-Mon") {
    field(DESC, "Get current YX measure mode")
    field(INAA, "ModeYAux CPP")
    field(BB, "Raio")
    field(CC, "Delta - Raio")
    field(DD, "Diametro")
    field(EE, "Delta - Diametro")
    field(CALC, "AA='R'?BB:(AA='r'?CC:(AA='D'?DD:(AA=d?EE:'Not found')))")
}

record(ai, "$(P)$(R)PosZ-Mon") {
    field(DESC, "Get Z axis position")
    field(DTYP, "stream")
    field(SCAN, "I/O Intr")
    field(INP,  "@nd780.proto get_positionZ nd780")
}

record(scalcout, "$(P)$(R)ModeZ-Mon") {
    field(DESC, "Get current Z measure mode")
    field(INAA, "ModeZAux CPP")
    field(BB, "Raio")
    field(CC, "Delta - Raio")
    field(DD, "Diametro")
    field(EE, "Delta - Diametro")
    field(CALC, "AA='R'?BB:(AA='r'?CC:(AA='D'?DD:(AA=d?EE:'Not found')))")
}

record(scalcout, "$(P)$(R)EU-Mon") {
    field(DESC, "Get current engineering units")
    field(INAA, "EUAux CPP")
    field(CALC, "AA=' '?'mm':(AA='\"'?'pol':'Not found')")
}

##########################--Commands--###############################

record(bo, "$(P)$(R)Rst-Cmd") {
    field(DESC, "Reset device")
    field(DTYP, "stream")
    field(ZNAM, "0")
    field(ONAM, "1")
    field(OUT,  "@nd780.proto cmd_reset nd780")
}

record(seq, "$(P)$(R)chEU-Cmd") {
    field(DESC, "Toggle mm/pol EU")
    field(SELM, "All")

    field(DLY0, "0.5")
    field(DOL0, "1")
    field(LNK0, "KeyC CP")

    field(DLY1, "0.5")
    field(DOL1, "1")
    field(LNK1, "KeyLeft CP")

    field(DLY2, "0.5")
    field(DOL2, "1")
    field(LNK2, "KeyFN1 CP")

    field(DLY3, "0.5")
    field(DOL3, "1")
    field(LNK3, "KeyEnt CP")

    field(DLY4, "0.5")
    field(DOL4, "1")
    field(LNK4, "KeyFN1 CP")
    
    field(DLY5, "0.5")
    field(DOL5, "1")
    field(LNK5, "KeyEnt CP")

    field(DLY6, "0.5")
    field(DOL6, "1")
    field(LNK6, "KeyC CP")
}

record(seq, "$(P)$(R)PutPass-Cmd") {
    field(DESC, "Types Password")
    field(SELM, "All")

    field(DLY0, "0.5")
    field(DOL0, "1")
    field(LNK0, "Key9-Cmd")

    field(DLY1, "0.5")
    field(DOL1, "1")
    field(LNK1, "Key5-Cmd")

    field(DLY2, "0.5")
    field(DOL2, "1")
    field(LNK2, "Key1-Cmd")

    field(DLY2, "0.5")
    field(DOL2, "1")
    field(LNK2, "Key4-Cmd")

    field(DLY2, "0.5")
    field(DOL2, "1")
    field(LNK2, "Key8-Cmd")
}

# Implement record to change mode